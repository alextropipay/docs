{
    "schemes": ["https"],
    "swagger": "2.0",
    "info": {
        "description": "Banking as a service API.",
        "title": "REVO API",
        "contact": {
            "name": "Tropipay Support",
            "url": "https://help.tropipay.com/contacto/",
            "email": "support@tropipay.com"
        },
        "version": "1.0"
    },
    "host": "",
    "basePath": "/",
    "paths": {
        "/api/v1/account": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all accounts for the authenticated merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "List accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AccountResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/business-users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all business users for the authenticated merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-users"
                ],
                "summary": "List business users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BusinessUserResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new business user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-users"
                ],
                "summary": "Create business user",
                "parameters": [
                    {
                        "description": "Business user details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAccountBusinessUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.BusinessUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/business-users/{uid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of a specific business user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-users"
                ],
                "summary": "Get business user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BusinessUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific business user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-users"
                ],
                "summary": "Delete business user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/business-users/{uid}/kyb": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get KYB details for the business user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-users"
                ],
                "summary": "Get business KYB details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.KybResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/business-users/{uid}/shareholders": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all shareholders for the authenticated merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-users"
                ],
                "summary": "List business shareholders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ShareholderResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new shareholder for the authenticated merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-users"
                ],
                "summary": "Create business shareholder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shareholder details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateShareholderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ShareholderResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/business-users/{uid}/shareholders/{shareholder_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of a specific shareholder for the authenticated merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-users"
                ],
                "summary": "Get business shareholder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Shareholder ID",
                        "name": "shareholder_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ShareholderResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific shareholder for the authenticated merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-users"
                ],
                "summary": "Delete business shareholder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Shareholder ID",
                        "name": "shareholder_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/personal-users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all personal users for the authenticated merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "personal-users"
                ],
                "summary": "List personal users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PersonUserResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new personal user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "personal-users"
                ],
                "summary": "Create personal user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAccountPersonalUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.PersonUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/personal-users/{uid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of a specific personal user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "personal-users"
                ],
                "summary": "Get personal user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PersonUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific personal user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "personal-users"
                ],
                "summary": "Delete personal user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all users (both personal and business) for the authenticated merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all accounts for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-accounts"
                ],
                "summary": "List user accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AccountResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new account for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-accounts"
                ],
                "summary": "Create user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of a specific user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-accounts"
                ],
                "summary": "Get user account details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-accounts"
                ],
                "summary": "Delete user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update details of a specific user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-accounts"
                ],
                "summary": "Update user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/funding": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all funding orders for a specific account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "funding"
                ],
                "summary": "List funding orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.FundOrderResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/funding-methods": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all funding methods available for the account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-accounts"
                ],
                "summary": "Get funding methods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FundingMethodsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/funding/by-card/owner": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new funding order for the account owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "funding"
                ],
                "summary": "Create owner fund",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Funding details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateOwnerFundRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.PaymentUrlResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/funding/by-card/third-party": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new funding order from a third party",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "funding"
                ],
                "summary": "Create third party payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateThirdPartyPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.PaymentUrlResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/funding/{fid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of a specific funding order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "funding"
                ],
                "summary": "Get funding order details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Funding Order ID",
                        "name": "fid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FundOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all transactions for the authenticated merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "List transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TransactionResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transactions/{tid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of a specific transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transfer-capabilities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all the transfer types available for the account and their destinations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-accounts"
                ],
                "summary": "Get account transfer capabilities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TransferCapabilitiesResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transfers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all transfer orders for the authenticated account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfers"
                ],
                "summary": "List transfer orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TransferOrderResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transfers/crypto": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new cryptocurrency transfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfers"
                ],
                "summary": "Create crypto transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transfer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCryptoTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.TransferOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transfers/crypto/simulate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Simulate an cryptocurrency transfer to calculate fees and exchange rates.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfers"
                ],
                "summary": "Simulate crypto transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transfer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SimulateCryptoTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SimulateTransferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transfers/fiat": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new fiat transfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfers"
                ],
                "summary": "Create fiat transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transfer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFiatTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.TransferOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transfers/fiat/simulate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Simulate a fiat transfer to calculate fees and exchange rates.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfers"
                ],
                "summary": "Simulate fiat transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transfer details (see description for rules)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SimulateFiatTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SimulateTransferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transfers/internal": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new internal transfer between accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfers"
                ],
                "summary": "Create internal transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transfer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateInternalTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.TransferOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transfers/internal/simulate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Simulate an internal transfer to calculate fees and exchange rates.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfers"
                ],
                "summary": "Simulate internal transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transfer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SimulateInternalTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SimulateTransferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/users/{uid}/accounts/{aid}/transfers/{tid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of a specific transfer order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfers"
                ],
                "summary": "Get transfer order details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transfer Order ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TransferOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/{aid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of a specific account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/account-profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all account profiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account profiles"
                ],
                "summary": "List account profiles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AccountProfileResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new account profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account profiles"
                ],
                "summary": "Create account profile",
                "parameters": [
                    {
                        "description": "Account profile details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAccountProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/admin/account-profile/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get details of a specific account profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account profiles"
                ],
                "summary": "Get account profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update details of a specific account profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account profiles"
                ],
                "summary": "Update account profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account profile details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAccountProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deactivate a specific account profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account profiles"
                ],
                "summary": "Deactivate account profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticate a merchant and get an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/status": {
            "get": {
                "description": "Check the health status of the API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/status.healthResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v1/webhooks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all webhooks for the merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "List webhooks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.WebhookResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new webhook for the merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Create webhook",
                "parameters": [
                    {
                        "description": "Create webhook request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateWebhookRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.WebhookResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/webhooks/{wid}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Disable a webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Delete webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Webhook ID",
                        "name": "wid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.CryptoNetwork": {
            "type": "string",
            "enum": [
                "POLYGON",
                "ETHEREUM",
                "SOLANA",
                "TRON",
                "BITCOIN"
            ],
            "x-enum-varnames": [
                "Polygon",
                "Ethereum",
                "Solana",
                "Tron",
                "Bitcoin"
            ]
        },
        "domain.CryptoNetworkGroup": {
            "type": "object",
            "properties": {
                "currencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Currency"
                    }
                },
                "network": {
                    "$ref": "#/definitions/domain.CryptoNetwork"
                }
            }
        },
        "domain.Currency": {
            "type": "string",
            "enum": [
                "EUR",
                "USD",
                "USDT",
                "USDC",
                "EURC",
                "BTC",
                "ETH"
            ],
            "x-enum-varnames": [
                "EUR",
                "USD",
                "USDT",
                "USDC",
                "EURC",
                "BTC",
                "ETH"
            ]
        },
        "domain.Money": {
            "type": "object",
            "required": [
                "currency"
            ],
            "properties": {
                "amount": {
                    "description": "Amount in cents. Ex: 12345 = 123.45€",
                    "type": "integer"
                },
                "currency": {
                    "description": "USD, EUR, etc.",
                    "enum": [
                        "EUR",
                        "USD",
                        "USDC",
                        "EURC",
                        "BTC",
                        "ETH",
                        "USDT"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.Currency"
                        }
                    ]
                }
            }
        },
        "domain.PersonDocumentType": {
            "type": "string",
            "enum": [
                "NATIONAL_ID",
                "RESIDENCE_CARD",
                "PASSPORT",
                "DRIVING_LICENSE"
            ],
            "x-enum-varnames": [
                "NationalID",
                "ResidenceCard",
                "Passport",
                "DrivingLicense"
            ]
        },
        "domain.RegionCode": {
            "type": "string",
            "enum": [
                "SEPA",
                "LATAM"
            ],
            "x-enum-varnames": [
                "SEPA",
                "LATAM"
            ]
        },
        "domain.RoutingType": {
            "type": "string",
            "enum": [
                "IBAN",
                "ACH"
            ],
            "x-enum-comments": {
                "ACH": "For US"
            },
            "x-enum-varnames": [
                "IBAN",
                "ACH"
            ]
        },
        "domain.UserType": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "PersonalUser",
                "BusinessUser"
            ]
        },
        "dto.AccountProfileResponse": {
            "type": "object",
            "properties": {
                "accountType": {
                    "type": "string"
                },
                "cryptoTransferAllowed": {
                    "type": "boolean"
                },
                "fiatExternalTransferAllowed": {
                    "type": "boolean"
                },
                "fiatOwnTransferAllowed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "incomeLimitPerDay": {
                    "type": "integer"
                },
                "incomeLimitPerMonth": {
                    "type": "integer"
                },
                "incomeLimitPerTransaction": {
                    "type": "integer"
                },
                "internalTransferAllowed": {
                    "type": "boolean"
                },
                "intraProviderTransferAllowed": {
                    "type": "boolean"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "monthlyFee": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "openAccountFee": {
                    "type": "integer"
                }
            }
        },
        "dto.AccountResponse": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "balance": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "pendingIn": {
                    "type": "integer"
                },
                "pendingOut": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.App": {
            "type": "object",
            "properties": {
                "platform": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.BusinessUserResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "documentNumber": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numShareholders": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "dto.CardFundingMethod": {
            "type": "object",
            "properties": {
                "currencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.Client": {
            "type": "object",
            "properties": {
                "major": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.Computed": {
            "type": "object",
            "properties": {
                "age": {
                    "$ref": "#/definitions/dto.DataInt"
                },
                "isDocumentExpired": {
                    "$ref": "#/definitions/dto.IsDocumentExpired"
                }
            }
        },
        "dto.CreateAccountBusinessUserRequest": {
            "type": "object",
            "required": [
                "address",
                "city",
                "country",
                "documentNumber",
                "email",
                "name",
                "numShareholders",
                "phone",
                "postalCode"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "documentNumber": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numShareholders": {
                    "type": "integer",
                    "minimum": 1
                },
                "phone": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                }
            }
        },
        "dto.CreateAccountPersonalUserRequest": {
            "type": "object",
            "required": [
                "address",
                "birthdate",
                "city",
                "country",
                "documentNumber",
                "documentType",
                "email",
                "kyc",
                "name",
                "postalCode",
                "surname"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "documentNumber": {
                    "type": "string"
                },
                "documentType": {
                    "enum": [
                        "NATIONAL_ID",
                        "RESIDENCE_CARD",
                        "PASSPORT",
                        "DRIVING_LICENSE"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.PersonDocumentType"
                        }
                    ]
                },
                "email": {
                    "type": "string"
                },
                "kyc": {
                    "$ref": "#/definitions/dto.KycData"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.CreateAccountProfileRequest": {
            "type": "object",
            "required": [
                "accountTypeId",
                "name"
            ],
            "properties": {
                "accountTypeId": {
                    "type": "integer"
                },
                "allowedOriginCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cryptoDestinationNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CryptoDestination"
                    }
                },
                "cryptoTransferAllowed": {
                    "type": "boolean"
                },
                "fiatDestinationCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fiatDestinationRegions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.RegionCode"
                    }
                },
                "fiatExternalTransferAllowed": {
                    "type": "boolean"
                },
                "fiatOwnTransferAllowed": {
                    "type": "boolean"
                },
                "incomeLimitPerDay": {
                    "type": "integer"
                },
                "incomeLimitPerMonth": {
                    "type": "integer"
                },
                "incomeLimitPerTransaction": {
                    "type": "integer"
                },
                "internalTransferAllowed": {
                    "type": "boolean"
                },
                "intraProviderTransferAllowed": {
                    "type": "boolean"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "monthlyFee": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "openAccountFee": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateAccountRequest": {
            "type": "object",
            "required": [
                "alias",
                "currency"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "currency": {
                    "type": "string",
                    "enum": [
                        "EUR",
                        "USD",
                        "USDC"
                    ]
                }
            }
        },
        "dto.CreateCryptoTransferRequest": {
            "type": "object",
            "required": [
                "origin",
                "recipient",
                "reference"
            ],
            "properties": {
                "origin": {
                    "$ref": "#/definitions/domain.Money"
                },
                "recipient": {
                    "$ref": "#/definitions/dto.RecipientCrypto"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "dto.CreateFiatTransferRequest": {
            "type": "object",
            "required": [
                "description",
                "origin",
                "recipient",
                "reference"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "origin": {
                    "$ref": "#/definitions/domain.Money"
                },
                "recipient": {
                    "$ref": "#/definitions/dto.RecipientFiat"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "dto.CreateInternalTransferRequest": {
            "type": "object",
            "required": [
                "origin",
                "recipient",
                "reference"
            ],
            "properties": {
                "origin": {
                    "$ref": "#/definitions/domain.Money"
                },
                "recipient": {
                    "$ref": "#/definitions/dto.InternalRecipient"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "dto.CreateOwnerFundRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency",
                "reference",
                "urlFailed",
                "urlSuccess"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string",
                    "enum": [
                        "EUR",
                        "USD",
                        "USDC"
                    ]
                },
                "reference": {
                    "type": "string"
                },
                "urlFailed": {
                    "type": "string"
                },
                "urlSuccess": {
                    "type": "string"
                }
            }
        },
        "dto.CreateShareholderRequest": {
            "type": "object",
            "required": [
                "email",
                "kyc",
                "name",
                "surname"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "kyc": {
                    "$ref": "#/definitions/dto.KycData"
                },
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.CreateThirdPartyPaymentRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency",
                "payer",
                "reference",
                "urlFailed",
                "urlSuccess"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string",
                    "enum": [
                        "EUR",
                        "USD",
                        "USDC"
                    ]
                },
                "payer": {
                    "$ref": "#/definitions/dto.PayerData"
                },
                "reference": {
                    "type": "string"
                },
                "urlFailed": {
                    "type": "string"
                },
                "urlSuccess": {
                    "type": "string"
                }
            }
        },
        "dto.CreateWebhookRequest": {
            "type": "object",
            "required": [
                "secret",
                "url"
            ],
            "properties": {
                "secret": {
                    "type": "string",
                    "minLength": 16
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.CryptoDestination": {
            "type": "object",
            "required": [
                "currency",
                "network"
            ],
            "properties": {
                "currency": {
                    "$ref": "#/definitions/domain.Currency"
                },
                "network": {
                    "$ref": "#/definitions/domain.CryptoNetwork"
                }
            }
        },
        "dto.CryptoFundingMethod": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/domain.Currency"
                },
                "network": {
                    "type": "string"
                }
            }
        },
        "dto.CryptoTransferCapability": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.CryptoNetworkGroup"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                }
            }
        },
        "dto.DataInt": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "integer"
                }
            }
        },
        "dto.Device": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.DeviceFingerprint": {
            "type": "object",
            "properties": {
                "app": {
                    "$ref": "#/definitions/dto.App"
                },
                "browser": {
                    "$ref": "#/definitions/dto.Client"
                },
                "device": {
                    "$ref": "#/definitions/dto.Device"
                },
                "engine": {
                    "$ref": "#/definitions/dto.Client"
                },
                "ip": {
                    "type": "string"
                },
                "os": {
                    "$ref": "#/definitions/dto.Client"
                },
                "ua": {
                    "type": "string"
                }
            }
        },
        "dto.Document": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dto.FieldValue"
                    }
                },
                "merchantFields": {
                    "type": "array",
                    "items": {}
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Step"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.FXQuote": {
            "type": "object",
            "properties": {
                "rate": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "validUntil": {
                    "type": "string"
                }
            }
        },
        "dto.FiatFundingMethod": {
            "type": "object",
            "properties": {
                "accountHolder": {
                    "type": "string"
                },
                "accountNumber": {
                    "description": "For ACH",
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "iban": {
                    "description": "For SEPA",
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "routingNumber": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/domain.RoutingType"
                }
            }
        },
        "dto.FiatTransferCapability": {
            "type": "object",
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                }
            }
        },
        "dto.FieldValue": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.Flow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.FundOrderResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/definitions/domain.Money"
                },
                "fee": {
                    "$ref": "#/definitions/domain.Money"
                },
                "id": {
                    "type": "string"
                },
                "origin": {
                    "$ref": "#/definitions/domain.Money"
                },
                "rate": {
                    "type": "number"
                },
                "reference": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.FundingMethodsResponse": {
            "type": "object",
            "properties": {
                "card": {
                    "$ref": "#/definitions/dto.CardFundingMethod"
                },
                "crypto": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CryptoFundingMethod"
                    }
                },
                "fiat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FiatFundingMethod"
                    }
                }
            }
        },
        "dto.Identity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.InternalRecipient": {
            "type": "object",
            "required": [
                "accountId"
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                }
            }
        },
        "dto.InternalTransferCapability": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                }
            }
        },
        "dto.IsDocumentExpired": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "dto.KybDetail": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.KybResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.KybDetail"
                    }
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "dto.KycData": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.MatiData"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "api_code",
                "api_key"
            ],
            "properties": {
                "api_code": {
                    "type": "string"
                },
                "api_key": {
                    "type": "string"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.MatiData": {
            "type": "object",
            "properties": {
                "computed": {
                    "$ref": "#/definitions/dto.Computed"
                },
                "deviceFingerprint": {
                    "$ref": "#/definitions/dto.DeviceFingerprint"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Document"
                    }
                },
                "expired": {
                    "type": "boolean"
                },
                "flow": {
                    "$ref": "#/definitions/dto.Flow"
                },
                "hasProblem": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "identity": {
                    "$ref": "#/definitions/dto.Identity"
                },
                "masJobToBePostpone": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/dto.Metadata"
                },
                "profileId": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Step"
                    }
                },
                "videoAgreement": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "dto.Metadata": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                }
            }
        },
        "dto.PayerData": {
            "type": "object",
            "required": [
                "address",
                "birthdate",
                "city",
                "country",
                "documentNumber",
                "documentType",
                "email",
                "name",
                "phone",
                "postalCode",
                "surname"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "documentNumber": {
                    "type": "string"
                },
                "documentType": {
                    "type": "string",
                    "enum": [
                        "NATIONAL_ID",
                        "RESIDENCE_CARD",
                        "PASSPORT",
                        "DRIVING_LICENSE"
                    ]
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.PaymentUrlResponse": {
            "type": "object",
            "properties": {
                "order": {
                    "$ref": "#/definitions/dto.FundOrderResponse"
                },
                "paymentUrl": {
                    "type": "string"
                }
            }
        },
        "dto.PersonUserResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "documentNumber": {
                    "type": "string"
                },
                "documentType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.RecipientCrypto": {
            "type": "object",
            "required": [
                "address",
                "currency",
                "network"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/domain.Currency"
                },
                "network": {
                    "$ref": "#/definitions/domain.CryptoNetwork"
                }
            }
        },
        "dto.RecipientFiat": {
            "type": "object",
            "required": [
                "accountNumber",
                "address",
                "beneficiaryType",
                "city",
                "country",
                "currency",
                "documentNumber",
                "name",
                "postalCode",
                "routingData",
                "surname"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "beneficiaryType": {
                    "description": "Beneficiary Type. Possible values: PERSON, BUSINESS\nrequired: true\nexample: PERSON",
                    "type": "string",
                    "enum": [
                        "PERSON",
                        "BUSINESS"
                    ]
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/domain.Currency"
                },
                "documentNumber": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "routingData": {
                    "enum": [
                        "IBAN"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.RoutingType"
                        }
                    ]
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.ShareholderResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.SimulateCryptoTransferRequest": {
            "type": "object",
            "required": [
                "origin",
                "recipient"
            ],
            "properties": {
                "origin": {
                    "$ref": "#/definitions/domain.Money"
                },
                "recipient": {
                    "$ref": "#/definitions/dto.SimulateRecipientCrypto"
                }
            }
        },
        "dto.SimulateFiatTransferRequest": {
            "type": "object",
            "required": [
                "origin",
                "recipient"
            ],
            "properties": {
                "origin": {
                    "$ref": "#/definitions/domain.Money"
                },
                "recipient": {
                    "$ref": "#/definitions/dto.SimulateRecipientFiat"
                }
            }
        },
        "dto.SimulateInternalTransferRequest": {
            "type": "object",
            "required": [
                "origin",
                "recipient"
            ],
            "properties": {
                "origin": {
                    "$ref": "#/definitions/domain.Money"
                },
                "recipient": {
                    "$ref": "#/definitions/dto.InternalRecipient"
                }
            }
        },
        "dto.SimulateRecipientCrypto": {
            "type": "object",
            "required": [
                "currency",
                "network"
            ],
            "properties": {
                "currency": {
                    "$ref": "#/definitions/domain.Currency"
                },
                "network": {
                    "$ref": "#/definitions/domain.CryptoNetwork"
                }
            }
        },
        "dto.SimulateRecipientFiat": {
            "type": "object",
            "required": [
                "country",
                "currency",
                "routingData"
            ],
            "properties": {
                "country": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/domain.Currency"
                },
                "routingData": {
                    "enum": [
                        "IBAN"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.RoutingType"
                        }
                    ]
                }
            }
        },
        "dto.SimulateTransferResponse": {
            "type": "object",
            "properties": {
                "destination": {
                    "$ref": "#/definitions/domain.Money"
                },
                "origin": {
                    "$ref": "#/definitions/domain.Money"
                },
                "quote": {
                    "$ref": "#/definitions/dto.FXQuote"
                },
                "quoteId": {
                    "type": "string"
                }
            }
        },
        "dto.Step": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "dto.TransactionResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.TransferCapabilitiesResponse": {
            "type": "object",
            "properties": {
                "crypto": {
                    "$ref": "#/definitions/dto.CryptoTransferCapability"
                },
                "fiatExternal": {
                    "$ref": "#/definitions/dto.FiatTransferCapability"
                },
                "fiatOwn": {
                    "$ref": "#/definitions/dto.FiatTransferCapability"
                },
                "internal": {
                    "$ref": "#/definitions/dto.InternalTransferCapability"
                }
            }
        },
        "dto.TransferOrderResponse": {
            "type": "object",
            "properties": {
                "accountID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "origin": {
                    "$ref": "#/definitions/domain.Money"
                },
                "reference": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateAccountProfileRequest": {
            "type": "object",
            "properties": {
                "accountTypeId": {
                    "type": "integer"
                },
                "allowedOriginCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cryptoDestinationNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CryptoDestination"
                    }
                },
                "cryptoTransferAllowed": {
                    "type": "boolean"
                },
                "fiatDestinationCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fiatDestinationRegions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.RegionCode"
                    }
                },
                "fiatExternalTransferAllowed": {
                    "type": "boolean"
                },
                "fiatOwnTransferAllowed": {
                    "type": "boolean"
                },
                "incomeLimitPerDay": {
                    "type": "integer"
                },
                "incomeLimitPerMonth": {
                    "type": "integer"
                },
                "incomeLimitPerTransaction": {
                    "type": "integer"
                },
                "internalTransferAllowed": {
                    "type": "boolean"
                },
                "intraProviderTransferAllowed": {
                    "type": "boolean"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "monthlyFee": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "openAccountFee": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateUserAccountRequest": {
            "type": "object",
            "required": [
                "alias"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/domain.UserType"
                }
            }
        },
        "dto.WebhookResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "httperror.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/httperror.ErrorData"
                }
            }
        },
        "httperror.ErrorCode": {
            "type": "string",
            "enum": [
                "INVALID_REQUEST",
                "UNAUTHORIZED",
                "FORBIDDEN",
                "NOT_FOUND",
                "INTERNAL_SERVER_ERROR",
                "UNKNOWN_ERROR",
                "NOT_IMPLEMENTED"
            ],
            "x-enum-varnames": [
                "InvalidRequestCode",
                "UnauthorizedCode",
                "ForbiddenCode",
                "NotFoundCode",
                "InternalServerCode",
                "UnknownErrorCode",
                "NotImplementedCode"
            ]
        },
        "httperror.ErrorData": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/httperror.ErrorCode"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httperror.ErrorDetails"
                    }
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/httperror.ErrorType"
                }
            }
        },
        "httperror.ErrorDetails": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "httperror.ErrorType": {
            "type": "string",
            "enum": [
                "VALIDATION_ERROR",
                "AUTHENTICATION_ERROR",
                "AUTHORIZATION_ERROR",
                "NOT_FOUND_ERROR",
                "INTERNAL_ERROR",
                "UNKNOWN_ERROR"
            ],
            "x-enum-varnames": [
                "ValidationError",
                "AuthenticationError",
                "AuthorizationError",
                "NotFoundError",
                "InternalError",
                "UnknownError"
            ]
        },
        "status.healthResponse": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API Key for accessing management endpoints",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
